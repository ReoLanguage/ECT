<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2008/GenModel" sameFileForDiagramAndModel="true"
    diagramFileExtension="ea">
  <diagram
      visualID="1000"
      editPartClassName="ModuleEditPart"
      itemSemanticEditPolicyClassName="ModuleItemSemanticEditPolicy"
      notationViewFactoryClassName="ModuleViewFactory"
      canonicalEditPolicyClassName="ModuleCanonicalEditPolicy"
      iconProviderPriority="Low"
      creationWizardCategoryID="cwi.reo"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="ModuleEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="ea.genmodel#//ea/automata/Module"/>
    <childNodes
        visualID="2001"
        editPartClassName="StateEditPart"
        itemSemanticEditPolicyClassName="StateItemSemanticEditPolicy"
        notationViewFactoryClassName="StateViewFactory"
        canonicalEditPolicyClassName="StateCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="StateGraphicalNodeEditPolicy"
        createCommandClassName="StateCreateCommand"
        containers="//@diagram/@compartments.0">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="StateEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="StateFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StateFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fStateNameLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fStateExtensionLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StateFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fStateNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fStateNameLabel.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFStateNameLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFStateNameLabel.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFStateNameLabel.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFStateNameLabel.horizontalIndent = 0;&#xA;constraintFStateNameLabel.horizontalSpan = 1;&#xA;constraintFStateNameLabel.verticalSpan = 1;&#xA;constraintFStateNameLabel.grabExcessHorizontalSpace = true;&#xA;constraintFStateNameLabel.grabExcessVerticalSpace = true;&#xA;this.add(fStateNameLabel, constraintFStateNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fStateExtensionLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fStateExtensionLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fStateExtensionLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getStateNameLabel() {&#xA;&#x9;&#x9;return fStateNameLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getStateExtensionLabel() {&#xA;&#x9;&#x9;return fStateExtensionLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 240, 240, 180);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <requiredPluginIDs>org.eclipse.gmf.runtime.draw2d.ui</requiredPluginIDs>
      </viewmap>
      <modelFacet>
        <metaClass
            href="ea.genmodel#//ea/automata/State"/>
        <containmentMetaFeature
            href="ea.genmodel#//ea/automata/Automaton/states"/>
        <childMetaFeature
            href="ea.genmodel#//ea/automata/Automaton/states"/>
        <modelElementInitializer
            xsi:type="gmfgen:GenFeatureSeqInitializer">
          <initializers
              xsi:type="gmfgen:GenFeatureValueSpec"
              value="//@expressionProviders/@providers.0/@expressions.0">
            <feature
                href="ea.genmodel#//ea/automata/State/name"/>
          </initializers>
        </modelElementInitializer>
      </modelFacet>
      <labels
          visualID="4001"
          editPartClassName="StateNameEditPart"
          itemSemanticEditPolicyClassName="StateNameItemSemanticEditPolicy"
          notationViewFactoryClassName="StateNameViewFactory">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getStateNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="ea.genmodel#//ea/automata/State/name"/>
        </modelFacet>
      </labels>
      <labels
          xsi:type="gmfgen:GenExternalNodeLabel"
          visualID="4002"
          editPartClassName="StateExtensionEditPart"
          itemSemanticEditPolicyClassName="StateExtensionItemSemanticEditPolicy"
          notationViewFactoryClassName="StateExtensionViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:InnerClassViewmap"
            className="StateFigure"
            classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class StateFigure extends org.eclipse.draw2d.Ellipse {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fStateNameLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fStateExtensionLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public StateFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fStateNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fStateNameLabel.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFStateNameLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFStateNameLabel.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFStateNameLabel.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFStateNameLabel.horizontalIndent = 0;&#xA;constraintFStateNameLabel.horizontalSpan = 1;&#xA;constraintFStateNameLabel.verticalSpan = 1;&#xA;constraintFStateNameLabel.grabExcessHorizontalSpace = true;&#xA;constraintFStateNameLabel.grabExcessVerticalSpace = true;&#xA;this.add(fStateNameLabel, constraintFStateNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fStateExtensionLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fStateExtensionLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fStateExtensionLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getStateNameLabel() {&#xA;&#x9;&#x9;return fStateNameLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getStateExtensionLabel() {&#xA;&#x9;&#x9;return fStateExtensionLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 240, 240, 180);&#xA;&#xA;">
          <attributes
              xsi:type="gmfgen:StyleAttributes"
              fixedForeground="true"
              fixedBackground="true"/>
          <requiredPluginIDs>org.eclipse.gmf.runtime.draw2d.ui</requiredPluginIDs>
        </viewmap>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="1001"
        editPartClassName="AutomatonEditPart"
        itemSemanticEditPolicyClassName="AutomatonItemSemanticEditPolicy"
        notationViewFactoryClassName="AutomatonViewFactory"
        canonicalEditPolicyClassName="AutomatonCanonicalEditPolicy"
        compartments="//@diagram/@compartments.0"
        graphicalNodeEditPolicyClassName="AutomatonGraphicalNodeEditPolicy"
        createCommandClassName="AutomatonCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="AutomatonEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="AutomatonFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AutomatonFigure extends org.eclipse.draw2d.RoundedRectangle {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fAutomatonNameLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fAutomatonExtensionLabel; &#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RectangleFigure fFigureAutomatonCompartment; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AutomatonFigure() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#xA;, getMapMode().DPtoLP(8)&#xA;));&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(THIS_BACK&#xA;);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fAutomatonNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fAutomatonNameLabel.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAutomatonNameLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFAutomatonNameLabel.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAutomatonNameLabel.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAutomatonNameLabel.horizontalIndent = 0;&#xA;constraintFAutomatonNameLabel.horizontalSpan = 1;&#xA;constraintFAutomatonNameLabel.verticalSpan = 1;&#xA;constraintFAutomatonNameLabel.grabExcessHorizontalSpace = true;&#xA;constraintFAutomatonNameLabel.grabExcessVerticalSpace = false;&#xA;this.add(fAutomatonNameLabel, constraintFAutomatonNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fAutomatonExtensionLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fAutomatonExtensionLabel.setText(&quot;&quot;);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFAutomatonExtensionLabel = new org.eclipse.draw2d.GridData();&#xA;constraintFAutomatonExtensionLabel.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAutomatonExtensionLabel.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFAutomatonExtensionLabel.horizontalIndent = 0;&#xA;constraintFAutomatonExtensionLabel.horizontalSpan = 1;&#xA;constraintFAutomatonExtensionLabel.verticalSpan = 1;&#xA;constraintFAutomatonExtensionLabel.grabExcessHorizontalSpace = true;&#xA;constraintFAutomatonExtensionLabel.grabExcessVerticalSpace = false;&#xA;this.add(fAutomatonExtensionLabel, constraintFAutomatonExtensionLabel);&#xA;&#xA;&#xA;&#xA;&#xA;fFigureAutomatonCompartment = new org.eclipse.draw2d.RectangleFigure();&#xA;fFigureAutomatonCompartment.setOutline(false);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFFigureAutomatonCompartment = new org.eclipse.draw2d.GridData();&#xA;constraintFFigureAutomatonCompartment.verticalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAutomatonCompartment.horizontalAlignment = org.eclipse.draw2d.GridData.FILL;&#xA;constraintFFigureAutomatonCompartment.horizontalIndent = 0;&#xA;constraintFFigureAutomatonCompartment.horizontalSpan = 1;&#xA;constraintFFigureAutomatonCompartment.verticalSpan = 1;&#xA;constraintFFigureAutomatonCompartment.grabExcessHorizontalSpace = true;&#xA;constraintFFigureAutomatonCompartment.grabExcessVerticalSpace = true;&#xA;this.add(fFigureAutomatonCompartment, constraintFFigureAutomatonCompartment);&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getAutomatonNameLabel() {&#xA;&#x9;&#x9;return fAutomatonNameLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getAutomatonExtensionLabel() {&#xA;&#x9;&#x9;return fAutomatonExtensionLabel;&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.draw2d.RectangleFigure getFigureAutomatonCompartment() {&#xA;&#x9;&#x9;return fFigureAutomatonCompartment;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;/**&#xA; * @generated&#xA; */&#xA;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 222, 232, 242);&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <requiredPluginIDs>org.eclipse.gmf.runtime.draw2d.ui</requiredPluginIDs>
      </viewmap>
      <modelFacet>
        <metaClass
            href="ea.genmodel#//ea/automata/Automaton"/>
        <containmentMetaFeature
            href="ea.genmodel#//ea/automata/Module/automata"/>
        <childMetaFeature
            href="ea.genmodel#//ea/automata/Module/automata"/>
      </modelFacet>
      <labels
          visualID="4003"
          editPartClassName="AutomatonNameEditPart"
          itemSemanticEditPolicyClassName="AutomatonNameItemSemanticEditPolicy"
          notationViewFactoryClassName="AutomatonNameViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getAutomatonNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            viewPattern="{0}"
            editorPattern="{0}"
            editPattern="{0}">
          <metaFeatures
              href="ea.genmodel#//ea/automata/Automaton/name"/>
        </modelFacet>
      </labels>
      <labels
          visualID="4004"
          editPartClassName="AutomatonExtensionEditPart"
          itemSemanticEditPolicyClassName="AutomatonExtensionItemSemanticEditPolicy"
          notationViewFactoryClassName="AutomatonExtensionViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getAutomatonExtensionLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
      </labels>
    </topLevelNodes>
    <links
        visualID="3001"
        editPartClassName="TransitionEditPart"
        itemSemanticEditPolicyClassName="TransitionItemSemanticEditPolicy"
        notationViewFactoryClassName="TransitionViewFactory"
        createCommandClassName="TransitionCreateCommand"
        reorientCommandClassName="TransitionReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="TransitionEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="TransitionFigure"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class TransitionFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fTransitionExtensionLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public TransitionFigure() {&#xA;&#x9;&#x9;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;createContents();&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fTransitionExtensionLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fTransitionExtensionLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fTransitionExtensionLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(0)&#xA;, getMapMode().DPtoLP(0)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getTransitionExtensionLabel() {&#xA;&#x9;&#x9;return fTransitionExtensionLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
        <requiredPluginIDs>org.eclipse.gmf.runtime.draw2d.ui</requiredPluginIDs>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="ea.genmodel#//ea/automata/Transition"/>
        <containmentMetaFeature
            href="ea.genmodel#//ea/automata/Automaton/transitions"/>
        <childMetaFeature
            href="ea.genmodel#//ea/automata/Automaton/transitions"/>
        <sourceMetaFeature
            href="ea.genmodel#//ea/automata/Transition/source"/>
        <targetMetaFeature
            href="ea.genmodel#//ea/automata/Transition/target"/>
      </modelFacet>
      <labels
          visualID="4005"
          editPartClassName="TransitionExtensionEditPart"
          itemSemanticEditPolicyClassName="TransitionExtensionItemSemanticEditPolicy"
          notationViewFactoryClassName="TransitionExtensionViewFactory"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getTransitionExtensionLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel">
          <attributes
              xsi:type="gmfgen:LabelOffsetAttributes"
              y="40"/>
        </viewmap>
      </labels>
    </links>
    <compartments
        visualID="5001"
        editPartClassName="AutomatonCompartmentEditPart"
        itemSemanticEditPolicyClassName="AutomatonCompartmentItemSemanticEditPolicy"
        notationViewFactoryClassName="AutomatonCompartmentViewFactory"
        canonicalEditPolicyClassName="AutomatonCompartmentCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0"
        title="AutomatonCompartment"
        canCollapse="false"
        hideIfEmpty="false"
        needsTitle="false"
        node="//@diagram/@topLevelNodes.0"
        listLayout="false">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <viewmap
          xsi:type="gmfgen:ParentAssignedViewmap"
          getterName="getFigureAutomatonCompartment"
          figureQualifiedClassName="org.eclipse.draw2d.RectangleFigure"/>
    </compartments>
    <palette>
      <groups
          title="ea">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Automaton"
            description="Create new Automaton"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="State"
            description="Create new State"
            genNodes="//@diagram/@childNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="Transition"
            description="Create new Transition"
            genLinks="//@diagram/@links.0"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="org.ect.ea.diagram.general"
        name="Automata Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.ect.ea.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.ect.ea.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.ect.ea.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.ect.ea.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="org.ect.ea.diagram.pathmaps"
          name="Pathmaps"
          kind="Pathmaps"/>
    </preferencePages>
  </diagram>
  <plugin
      provider="CWI"/>
  <editor/>
  <navigator
      generateDomainModelNavigator="false">
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="ea.genmodel#/"/>
  <expressionProviders>
    <providers
        xsi:type="gmfgen:GenJavaExpressionProvider">
      <expressions
          body="stateName"/>
    </providers>
  </expressionProviders>
</gmfgen:GenEditorGenerator>
